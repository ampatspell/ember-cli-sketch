{{ui-block/sketch/stage stage=attached class="sketch" ready=(action "ready")}}

<div class="info">

  <div class="block">
    <div class="title">{{stage}}</div>
    <div class="actions">
      {{#if attached}}
        <div>attached</div>
      {{else}}
        <div>detached</div>
      {{/if}}
    </div>
    {{#let stage.node.renderer.size as |size|}}
      {{#if size}}
        <div class="actions">
          {{size.width}}×{{size.height}}
        </div>
      {{/if}}
    {{/let}}
    <div class="actions">
      {{ui-block/button class="small" value="Toggle" action=(action "toggle")}}
    </div>
  </div>

  {{#if backgroundAndContent}}
    <div class="block">
      <div class="title">Background & Content</div>
      <div class="label">Editing: {{if content.visible "Content" "Background"}}</div>
      <div class="actions">
        {{ui-block/button class="small" value=(if content.visible "Edit background" "Edit content") action=(action "toggleContentBackground")}}
      </div>
    </div>
  {{/if}}

  <div class="block">
    <div class="title">Tool: {{stage.node.tools.selected.type}}</div>
    <div class="actions">
      {{#let stage.node.tools.selected as |selected|}}
        <div class="row">
          {{ui-block/button class="small" value="Selection" disabled=(eq selected.type "node/selection") action=(action "setTool" null)}}
        </div>
        <div class="row">
          {{ui-block/button class="small" value="Drag stage" disabled=(eq selected.type "stage/drag") action=(action "setTool" "stage/drag")}}
          {{ui-block/button class="small" value="Zoom stage" disabled=(eq selected.type "stage/zoom") action=(action "setTool" "stage/zoom")}}
        </div>
      {{/let}}
    </div>
    <div class="actions">
      <div>Space: drag stage</div>
      <div>Alt: zoom stage</div>
      <div>Escape: selection</div>
    </div>
  </div>

  <div class="block">
    <div class="title">Interactions</div>
    <div clas="actions">
      <div>
        Mouse:
        {{#let stage.node.interactions.mouse.over as |over|}}
          {{#if over}}
            {{over}}
          {{else}}
            out
          {{/if}}
        {{/let}}
      </div>
      <div>
        Keyboard:
        {{#let stage.node.interactions.keyboard as |keyboard|}}
          {{#if keyboard.isShift}}
            shift
          {{/if}}
          {{#if keyboard.isSpace}}
            space
          {{/if}}
          {{#if keyboard.isMeta}}
            meta
          {{/if}}
          {{#if keyboard.isAlt}}
            alt
          {{/if}}
        {{/let}}
      </div>
    </div>
  </div>

  <div class="block">
    <div class="title" role="button" {{action "performAction" stage.node "reset"}}>Position: {{stage.x}}×{{stage.y}}</div>
    <div class="actions">
      {{ui-block/slider min=-1000 max=1000 step=1 value=stage.x update=(action "updateStageProperty" "x")}}
      {{ui-block/slider min=-1000 max=1000 step=1 value=stage.y update=(action "updateStageProperty" "y")}}
    </div>
  </div>

  <div class="block">
    <div class="title" role="button" {{action "performActionValue" stage.node "zoom" 1}}>Zoom: {{stage.zoom}}</div>
    <div class="actions">
      {{ui-block/slider min=0 max=10 step=0.01 value=stage.zoom update=(action "performActionValue" stage.node "zoom")}}
    </div>
  </div>

  <div class="block">
    <div class="actions cols">
      <div class="col">
        <div class="label">Stage</div>
        <div class="row">
          {{ui-block/button class="small" value="Center" action=(action "center")}}
          {{ui-block/button class="small" value="Fit" action=(action "fit")}}
        </div>
      </div>
      <div class="col">
        <div class="label">Areas</div>
        <div class="row">
          {{ui-block/button class="small" value="Center" action=(action "center" "containers")}}
          {{ui-block/button class="small" value="Fit" action=(action "fit" "containers")}}
        </div>
      </div>
    </div>
  </div>

  <div class="block">
    <div class="label">Background: {{stage.fill}}</div>
    <div class="row">
      {{ui-block/button class="small" value="Grey" action=(action "updateStageProperty" "fill" "grey")}}
      {{ui-block/button class="small" value="White" action=(action "updateStageProperty" "fill" "white")}}
    </div>
  </div>

  <div class="block">
    <div class="title">Tree</div>
    <div>
      {{#each stage.nodes as |node|}}
        <div>
          <div class={{if node.node.isSelected "strong"}} role="button" {{action "select" node}}>{{node.info}}</div>
          {{#each node.nodes as |nested|}}
            <div class="pad-left">
              <div class={{if nested.node.isSelected "strong"}} role="button" {{action "select" nested}}>{{nested.info}}</div>
            </div>
          {{/each}}
        </div>
      {{/each}}
    </div>
  </div>

  <div class="block">
    <div class="title">Hover</div>
    <div>
      {{#each stage.node.hover.attached as |node|}}
        <div role="button" {{action "setGlobal" "node" node.model}}>{{node.model}}</div>
      {{else}}
        None
      {{/each}}
    </div>
  </div>

  {{#each stage.node.selection.attached as |node|}}
    <div class="block">
      <div class="title" role="button" {{action "setGlobal" "node" node.model}}>
        <div>Selection</div>
        <div>{{node.model}}</div>
        <div>#{{node.index}}</div>
        <div>
          Edge:
          {{#if node.edge.has}}
            {{node.edge.horizontal}} × {{node.edge.vertical}}
          {{else}}
            None
          {{/if}}
        </div>
      </div>
      <div class="actions">
        {{ui-block/button class="small" value="Move up" action=(action "moveUp" node)}}
        {{ui-block/button class="small" value="Move down" action=(action "moveDown" node)}}
      </div>
      <div class="actions">
        <div class="label" role="button" {{action "updateNodeProperty" node "visible" true}}>visible: {{node.model.visible}}</div>
        {{ui-block/button class="small" value=(if node.model.visible "Hide" "Show") action=(action "toggleNodeProperty" node "visible")}}

        <div class="label" role="button" {{action "updateNodeProperty" node "selectable" true}}>selectable: {{node.model.selectable}}</div>
        {{ui-block/button class="small" value=(if node.model.selectable "Not selectable" "Selectable") action=(action "toggleNodeProperty" node "selectable")}}

        <div class="label" role="button" {{action "updateNodeProperty" node "x" 0}}>x: {{node.model.x}}</div>
        {{ui-block/slider min=-1000 max=1000 step=1 value=node.model.x update=(action "updateNodeProperty" node "x")}}

        <div class="label" role="button" {{action "updateNodeProperty" node "y" 0}}>y: {{node.model.y}}</div>
        {{ui-block/slider min=-1000 max=1000 step=1 value=node.model.y update=(action "updateNodeProperty" node "y")}}

        <div class="label" role="button" {{action "updateNodeProperty" node "width" 100}}>width: {{node.model.width}}</div>
        {{ui-block/slider min=-1000 max=1000 step=1 value=node.model.width update=(action "updateNodeProperty" node "width")}}

        <div class="label" role="button" {{action "updateNodeProperty" node "height" 100}}>height: {{node.model.height}}</div>
        {{ui-block/slider min=-1000 max=1000 step=1 value=node.model.height update=(action "updateNodeProperty" node "height")}}

        {{#if node.model.hasRotation}}
          <div class="label" role="button" {{action "updateNodeProperty" node "rotation" 0}}>rotation: {{node.model.rotation}}</div>
          {{ui-block/slider min=-360 max=360 step=0.1 value=node.model.rotation update=(action "updateNodeProperty" node "rotation")}}
        {{/if}}

        <div class="label">aspect: {{if node.model.aspect node.model.aspect "Not set"}}</div>
        {{ui-block/slider min=0 max=2 step=0.01 value=node.model.aspect update=(action "updateNodeProperty" node "aspect")}}
        {{ui-block/button value="Fit in aspect ratio" action=(action "updateSizeFromAspect" node)}}

        {{#if node.model.hasFill}}
          <div class="label" role="button" {{action "updateNodeProperty" node "fill" "red"}}>fill: {{node.model.fill}}</div>
          {{ui-block/input value=node.model.fill update=(action "updateNodeProperty" node "fill")}}
        {{/if}}

        {{#if node.model.hasColor}}
          <div class="label" role="button" {{action "updateNodeProperty" node "color" "black"}}>color: {{node.model.color}}</div>
          {{ui-block/input value=node.model.color update=(action "updateNodeProperty" node "color")}}
        {{/if}}

        {{#if node.model.hasOpacity}}
          <div class="label" role="button" {{action "updateNodeProperty" node "opacity" 1}}>opacity: {{node.model.opacity}}</div>
          {{ui-block/slider min=0 max=1 step=0.01 value=node.model.opacity update=(action "updateNodeProperty" node "opacity")}}
        {{/if}}

        {{#if node.model.hasPadding}}
          <div class="label" role="button" {{action "updateNodeProperty" node "padding" 0}}>padding: {{node.model.padding}}</div>
          {{ui-block/input value=node.model.padding update=(action "updateNodeProperty" node "padding")}}
        {{/if}}

        {{#if node.model.hasFontFamily}}
          <div class="label">font family:</div>
          {{#ui-block/dropdown items=fonts selected=node.model.fontFamily select=(action "updateNodeProperty" node "fontFamily") as |hash|}}
            {{hash.component value=hash.item}}
          {{/ui-block/dropdown}}
        {{/if}}

        {{#if node.model.hasFontWeight}}
          <div class="label" role="button" {{action "updateNodeProperty" node "fontWeight" 500}}>font weight:</div>
          {{ui-block/input value=node.model.fontWeight update=(action "updateNodeProperty" node "fontWeight")}}
        {{/if}}

        {{#if node.model.hasFontSize}}
          <div class="label" role="button" {{action "updateNodeProperty" node "fontSize" 16}}>font size: {{node.model.fontSize}}</div>
          {{ui-block/slider min=0 max=96 step=1 value=node.model.fontSize update=(action "updateNodeProperty" node "fontSize")}}
        {{/if}}

        {{#if node.model.hasFontStyle}}
          <div class="label">Font style: {{node.model.fontStyle}}</div>
          <div class="row">
            {{ui-block/button value="Normal" action=(action "updateNodeProperty" node "fontStyle" "normal")}}
            {{ui-block/button value="Italic" action=(action "updateNodeProperty" node "fontStyle" "italic")}}
          </div>
        {{/if}}

        {{#if node.model.hasText}}
          <div class="label" role="button" {{action "updateNodeProperty" node "text" ""}}>text:</div>
          {{ui-block/input value=node.model.text update=(action "updateNodeProperty" node "text")}}
        {{/if}}

        {{#if node.model.hasAlign}}
          <div class="label">Align: {{node.model.align}}</div>
          <div class="row">
            {{ui-block/button value="Left" action=(action "updateNodeProperty" node "align" "left")}}
            {{ui-block/button value="Center" action=(action "updateNodeProperty" node "align" "center")}}
            {{ui-block/button value="Right" action=(action "updateNodeProperty" node "align" "right")}}
          </div>
        {{/if}}

        {{#if node.model.hasAlign}}
          <div class="label">Vertical Align: {{node.model.verticalAlign}}</div>
          <div class="row">
            {{ui-block/button value="Top" action=(action "updateNodeProperty" node "verticalAlign" "top")}}
            {{ui-block/button value="Middle" action=(action "updateNodeProperty" node "verticalAlign" "middle")}}
            {{ui-block/button value="Bottom" action=(action "updateNodeProperty" node "verticalAlign" "bottom")}}
          </div>
        {{/if}}

        {{#if node.model.hasUrl}}
          <div class="label" role="button" {{action "updateNodeProperty" node "url" ""}}>URL:</div>
          {{ui-block/input value=node.model.url update=(action "updateNodeProperty" node "url")}}
        {{/if}}

        {{#if node.model.hasCropMarks}}
          <div class="label">Crop Marks: {{node.model.cropMarks}}</div>
          <div class="row">
            {{ui-block/button value="Enabled" action=(action "updateNodeProperty" node "cropMarks" true)}}
            {{ui-block/button value="Disabled" action=(action "updateNodeProperty" node "cropMarks" false)}}
          </div>
          <div class="label" role="button" {{action "updateNodeProperty" node "cropMarksInset" 0}}>crop marks inset: {{node.model.cropMarksInset}}</div>
          {{ui-block/slider min=0 max=25 step=1 value=node.model.cropMarksInset update=(action "updateNodeProperty" node "cropMarksInset")}}
        {{/if}}
      </div>
    </div>
  {{else}}
    <div class="block">
      <div class="title">Selection</div>
      <div>None</div>
    </div>
  {{/each}}

  <div class="block">
    <div class="title">Add</div>
    {{#if isAddingNode}}
      <div class="actions">
        <div>Adding {{stage.node.tools.selected.model.type}}</div>
        <div>Hover over stage to see it</div>
      </div>
    {{/if}}
    <div class="actions">
      {{ui-block/button value="Area" disabled=isAddingNode action=(action "addNode" "area" (hash width=300 height=200))}}
      {{ui-block/button value="Rect" disabled=isAddingNode action=(action "addNode" "rect" (hash width=50 height=50 fill="red" opacity=0.3 rotation=0))}}
      {{ui-block/button value="Image" disabled=isAddingNode action=(action "addNode" "image" (hash width=300 height=200 url="https://66.media.tumblr.com/61445375824c46e0358ce929586ec013/tumblr_pfig1gFRQ41qz5jeho1_1280.jpg" opacity=1.0 rotation=0))}}
      {{ui-block/button
          disabled=isAddingNode
          value="Text"
          action=(action "addNode" "text" (hash
            width=200
            height=50
            text="To whom it may concern: It is springtime. It is late afternoon."
            fontFamily="Ubuntu Mono"
            fontWeight=400
          ))
      }}
    </div>
  </div>

  <div class="block">
    <div class="title">Create PDF or Image</div>
    {{#if stage.isGenerating}}
      <div class="actions">
        Please wait…
      </div>
    {{else if stage.generated}}
      <div class="actions">
        <a href={{stage.generated.url}} target="top">{{stage.generated.url}}</a>
      </div>
    {{/if}}
    <div class="actions">
      {{ui-block/button disabled=stage.isGenerating value="PDF" action=(action "createPdf")}}
      {{ui-block/button disabled=stage.isGenerating value="Image" action=(action "createImage")}}
    </div>
  </div>

</div>